---
import { MoonStar, Sun } from 'lucide-astro';

interface Props {
  readonly navId: string;
  readonly initLightMode: boolean;
  readonly class?: string;
}

const { navId, initLightMode, class: classNames } = Astro.props;
const themeModeToggleClassNames = `theme-mode-toggle noscript flex flex-row rounded-full p-1 bg-color-bg-light dark:bg-color-bg-dark border-color-text-light dark:border-color-text-dark rounded-full border ${classNames} ${initLightMode ? 'light' : 'dark'}`;
const darkId = `${navId}-dark`;
const lightId = `${navId}-light`;
---

<div id={navId} class={themeModeToggleClassNames} title="Theme Mode">
  <MoonStar id={darkId} class="theme-mode-toggle-icon theme-mode-toggle-icon-dark" size="18" />
  <Sun id={lightId} class="theme-mode-toggle-icon theme-mode-toggle-icon-light" size="18" />
</div>

<style is:global>
  .theme-mode-toggle.noscript {
    display: none;
  }
  .theme-mode-toggle:hover {
    border-color: var(--kdd-konker-flash-red);
  }

  .theme-mode-toggle {
    cursor: pointer;
  }
  :not([data-theme-mode='light']) .theme-mode-toggle-icon-light,
  [data-theme-mode='light'] .theme-mode-toggle .theme-mode-toggle-icon-dark {
    visibility: visible;
  }

  :not([data-theme-mode='light']) .theme-mode-toggle-icon-dark,
  [data-theme-mode='light'] .theme-mode-toggle .theme-mode-toggle-icon-light {
    visibility: hidden;
  }
</style>
