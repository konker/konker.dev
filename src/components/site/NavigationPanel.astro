---
import { NavigationPanelBreakpoint, NavigationPanelDirection } from '../../scripts/consts';

interface Props {
  readonly navId: string;
  readonly panelDir: NavigationPanelDirection;
  readonly breakpoint: NavigationPanelBreakpoint;
  readonly class: string;
}

const panelDirClassNamesLookup: Record<NavigationPanelDirection, string> = {
  [NavigationPanelDirection.TOP]: 'navigation-panel-top top-0',
  [NavigationPanelDirection.LEFT]: 'navigation-panel-left left-0',
  [NavigationPanelDirection.RIGHT]: 'navigation-panel-right right-0',
  [NavigationPanelDirection.BOTTOM]: 'navigation-panel-bottom bottom-0',
};

const { navId, panelDir, breakpoint, class: classNames } = Astro.props;
const toggleId = `${navId}-toggle`;
const panelFunctionalClassNames = `noscript navigation-panel ${breakpoint} w-full h-full hidden ${breakpoint}:block fixed ${breakpoint}:static z-30`;
const panelClassNames = classNames + ' ' + panelFunctionalClassNames + ' ' + panelDirClassNamesLookup[panelDir];
---

<div id={navId} class={panelClassNames}>
  <input id={toggleId} class="navigation-toggle" type="checkbox" />
  <slot />
</div>

<style is:global>
  .navigation-panel.noscript:has(input.navigation-toggle:checked) {
    @apply block;
  }
  .navigation-panel.noscript:has(input.navigation-toggle) {
    @apply hidden md:block;
  }
  .navigation-panel {
    animation-duration: 300ms;
    animation-timing-function: ease-out;
  }
  .navigation-panel a {
    @apply font-sans;
  }
  .navigation-panel-top {
    animation-name: slide-in-top;
  }
  .navigation-panel-left {
    animation-name: slide-in-left;
  }
  .navigation-panel-right {
    animation-name: slide-in-right;
  }
  .navigation-panel-bottom {
    animation-name: slide-in-bottom;
  }

  @keyframes slide-in-top {
    from {
      transform: translateY(-100vw);
    }
    to {
      transform: translateY(0);
    }
  }

  @keyframes slide-in-left {
    from {
      transform: translateX(-100vw);
    }
    to {
      transform: translateX(0);
    }
  }

  @keyframes slide-in-right {
    from {
      transform: translateX(100vw);
    }
    to {
      transform: translateX(0);
    }
  }

  @keyframes slide-in-bottom {
    from {
      transform: translateY(100vw);
    }
    to {
      transform: translateY(0);
    }
  }
</style>
