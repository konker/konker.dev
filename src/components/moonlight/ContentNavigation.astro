---
import type { CollectionEntry } from 'astro:content';
import type { MoonlightCollection } from '../../lib/moonlight/config';
import { NavigationPanelBreakpoint, NavigationPanelDirection } from '../../scripts/consts';
import NavigationLink from '../site/NavigationLink.astro';
import NavigationPanel from '../site/NavigationPanel.astro';

interface Props {
  readonly projectRootEntry: CollectionEntry<MoonlightCollection>;
  readonly projectEntries: Array<CollectionEntry<MoonlightCollection>>;
}

const { projectEntries, projectRootEntry } = Astro.props;
const urlPathSlug = Astro.url.pathname;
const navLinksSelectedLookup = projectEntries.map(
  (entry, i) => (urlPathSlug.length === 0 && i == 0) || urlPathSlug === entry.slug
);
const isProjectRoot = urlPathSlug === projectRootEntry.slug;
---

<NavigationPanel
  navId="content-navigation"
  breakpoint={NavigationPanelBreakpoint.MD}
  panelDir={NavigationPanelDirection.LEFT}
  class="h-full md:w-1/5 lg:w-3/12 overflow-hidden pt-6 md:pt-0 pb-3 pl-8 pr-6 lg:pr-0 bg-color-bg-light dark:bg-color-bg-dark"
>
  <nav>
    <ul>
      <li>
        <NavigationLink url={projectRootEntry.slug} title={projectRootEntry.data.title} selected={isProjectRoot} />
      </li>
      {
        projectEntries.map((x, i) => (
          <li>
            <NavigationLink url={x.slug} title={x.data.title} selected={!!navLinksSelectedLookup[i]} />
          </li>
        ))
      }
    </ul>
  </nav>
</NavigationPanel>

<style is:global>
  #content-navigation nav a.selected::before {
    content: '> ';
  }
</style>
