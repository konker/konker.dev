---
import ProjectPageLayout from '../layouts/moonlight/ProjectPageLayout.astro';
import { HomeBreadcrumb } from '../lib';
import { itemIconLookup, itemTextClassLookup } from '../lib/collections/helpers';
import type { MoonlightPagePropsEntry } from '../lib/moonlight';
import { moonlightGetStaticPathsEntries } from '../lib/moonlight/routing';
import type { LinkT } from '../lib/types';

export async function getStaticPaths() {
  return moonlightGetStaticPathsEntries({
    projects: '/projects',
  });
}

type Props = MoonlightPagePropsEntry;

// --------------------------------------------------------------------------
// FIXME: breadcrumbs are knackered
const indexBreadcrumb: LinkT = {
  title: 'Projects',
  url: '/projects/',
  Icon: itemIconLookup('projects'),
  textClass: itemTextClassLookup('projects'),
};
const indexBreadcrumbs: ReadonlyArray<LinkT> = [HomeBreadcrumb, indexBreadcrumb];
const breadcrumbs: ReadonlyArray<LinkT> = [
  ...indexBreadcrumbs,
  {
    title: Astro.props.item.entry.data.title,
    url: Astro.props.item.entry.slug,
  },
].concat(
  Astro.props.item.entry.slug !== Astro.props.item.entry.slug
    ? [
        {
          title: Astro.props.item.entry.data.title,
          url: Astro.props.item.entry.slug,
        },
      ]
    : []
);

const pageTitle = breadcrumbs
  .slice(2)
  .map((b) => b.title)
  .join(' / ');
---

<ProjectPageLayout
  pageTitle={pageTitle}
  breadcrumbs={breadcrumbs}
  kind={Astro.props.kind}
  entry={Astro.props.item.entry}
  projectNavigation={Astro.props.projectNavigation}
  prevEntry={Astro.props.prevItem?.entry}
  nextEntry={Astro.props.nextItem?.entry}
  Content={Astro.props.Content}
  headingGroups={Astro.props.headingGroups}
/>
