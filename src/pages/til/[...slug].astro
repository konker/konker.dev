---
import { getCollection } from 'astro:content';

import BlogPostLayout from '../../layouts/blog/BlogPostLayout.astro';
import { HomeBreadcrumb } from '../../lib';
import { collectionEntryToSectionNavigation, collectionEntryToUrl } from '../../lib/collections/helpers';
import type { LinkT } from '../../lib/types';

export async function getStaticPaths() {
  const entries = await getCollection('til');
  return entries
    .filter((e) => !e.data.draft)
    .map((entry) => ({
      params: { slug: entry.slug },
      props: { entry },
    }));
}

const { entry } = Astro.props;
const { image } = entry.data;
const { Content } = await entry.render();
const collection = 'til' as const;
const indexBreadcrumb: LinkT = { title: 'TIL', url: `/${collection}/` };

const breadcrumbs: ReadonlyArray<LinkT> = [
  HomeBreadcrumb,
  indexBreadcrumb,
  { title: entry.data.title, url: collectionEntryToUrl(collection, entry) },
];

// Derive the section navigation from the collection.
const entries = await getCollection(collection);
const filteredEntries = entries.filter((e) => !e.data.draft);
const sectionNavigation = collectionEntryToSectionNavigation(collection, indexBreadcrumb, filteredEntries, entry);
---

<BlogPostLayout
  {...entry.data}
  image={image}
  pageTitle={entry.data.title}
  breadcrumbs={breadcrumbs}
  sectionNavigation={sectionNavigation}
>
  <Content />
</BlogPostLayout>
