---
import BlogPostIndexItem from '../../components/blog/BlogPostIndexItem.astro';
import ProjectIndexItem from '../../components/moonlight/ProjectIndexItem.astro';
import { isBlogEntry, type TagCollection } from '../../lib/collections';
import type { TagEntry } from '../../lib/collections/tags';
import { isProjectEntry } from '../../lib/moonlight/config';
import type { LinkT } from '../../lib/types';
import PageLayout from '../site/PageLayout.astro';

interface Props {
  readonly pageTitle: string;
  readonly intro: string;
  readonly tagEntries: Array<TagEntry<TagCollection>>;
  readonly itemIconName?: string;
  readonly titleIconName?: string;
  readonly breadcrumbs?: ReadonlyArray<LinkT>;
}

const { pageTitle, breadcrumbs, intro, tagEntries, titleIconName } = Astro.props;
---

<PageLayout pageTitle={pageTitle} breadcrumbs={breadcrumbs} titleIconName={titleIconName}>
  <p class="mb-12" set:html={intro} />
  <nav class="my-6 md:my-16 not-prose">
    {
      tagEntries.map((tagEntry) =>
        isBlogEntry(tagEntry.entry) ? (
          <BlogPostIndexItem
            collection={tagEntry.collection}
            item={tagEntry.entry}
            itemIconName={tagEntry.collection}
          />
        ) : isProjectEntry(tagEntry.entry) ? (
          <ProjectIndexItem item={tagEntry.entry} itemIconName={tagEntry.collection} />
        ) : (
          <p>UNKNOWN ENTRY</p>
        )
      )
    }
  </nav>
</PageLayout>
