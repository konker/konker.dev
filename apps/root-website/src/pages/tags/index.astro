---
import TagLinkIndexLayout from '../../layouts/tags/TagLinkIndexLayout.astro';
import { HomeBreadcrumb } from '../../lib';
import { TAG_COLLECTIONS } from '../../lib/collections';
import { itemIconLookup, itemTextClassLookup } from '../../lib/collections/helpers';
import { tagsGetAllCollectionTags } from '../../lib/collections/tags';
import type { LinkT } from '../../lib/types';

// --------------------------------------------------------------------------
const { total, tags } = await tagsGetAllCollectionTags(TAG_COLLECTIONS);

// --------------------------------------------------------------------------
const links = tags.map((tag) => ({
  ...tag,
  link: {
    url: `/tags/${tag.tag}`,
    title: tag.tag,
  },
}));

// --------------------------------------------------------------------------
const content = (await Astro.glob('./index-content.md'))[0];
const pageTitle = content?.frontmatter.title;
const thisBreadcrumb: LinkT = {
  title: pageTitle,
  url: '/tags/',
  Icon: itemIconLookup('tags'),
  textClass: itemTextClassLookup('tags'),
};
const breadcrumbs: ReadonlyArray<LinkT> = [HomeBreadcrumb, thisBreadcrumb];
---

<TagLinkIndexLayout
  pageTitle={pageTitle}
  breadcrumbs={breadcrumbs}
  content={content}
  links={links}
  total={total}
  titleIconName="tags"
  itemIconName="tag"
/>
